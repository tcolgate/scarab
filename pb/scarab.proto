// This file is part of scarab.

syntax = "proto3";
option go_package = "github.com/tcolgate/scarab/scarab";

package scarab;

service Manager {
  rpc RegisterProfile (RegisterProfileRequest) returns (stream KeepAlive) {};
}

message ProfileArgOption {
  repeated string option = 1;
}

message ProfileArg {
  string name                 = 1;
  string description          = 2;
  oneof default {
    string string             = 3;
    float  float              = 4;
    ProfileArgOption option   = 5;
  }
}

message RegisterProfileRequest {
  string profile            = 1;
  string addr               = 2;
  string name               = 3;

  repeated ProfileArg args = 4;
}

message KeepAlive{
}

service Worker {
  rpc ReportLoad(ReportLoadRequest) returns (stream LoadMetrics) {};
  rpc RunJob(stream RunJobRequest) returns (stream JobMetrics) {};
}


message ReportLoadRequest {
  float interval = 1;
}

message LoadMetrics {
  float processrate = 1;
  float serveridle  = 2;
  float serverload  = 3;

  int64 processmem    = 4;
  int64 memdree       = 5;
}

message JobArg {
  string name                 = 1;
  oneof value {
    string string             = 2;
    float  float              = 3;
  }
}

message RunJobRequest {
  string profile       = 1;
  float  interval      = 2;
  float  maxrps        = 3;

  repeated JobArg args = 4;
}

message Counter {
  float value = 1;
}

message Gauge {
  float value = 1;
}

message Rate {
  float value    = 1;
  float duration = 2;
}

message Histogram {
}

message Metric {
  string name                   = 1;
  string description            = 2;
  map<string, string> labels    = 3;

  oneof value {
    Counter counter             = 4;
    Gauge gauge                 = 5;
    Rate rate                   = 6;
    Histogram histogram         = 7;
  }
}

message JobMetrics {
  repeated Metric metrics = 1;
}
