// This file is part of scarab.

syntax = "proto3";
option go_package = "github.com/tcolgate/scarab/scarab";

package scarab;

service Leader {
  rpc Register (RegisterRequest) returns (stream KeepAlive) {};
}

message RegisterRequest {
  repeated string profiles = 1;
  string addr              = 2;
  string name              = 3;
}

message KeepAlive{
}

service Worker {
  rpc ReportLoad(ReportLoadRequest) returns (stream LoadMetrics) {};
  rpc RunJob(RunJobRequest) returns (stream JobMetrics) {};
}


message ReportLoadRequest {
  float interval = 1;
}

message LoadMetrics {
  float processrate = 1;
  float serveridle  = 2;
  float serverload  = 3;

  int64 processmem    = 4;
  int64 memdree       = 5;
}

message RunJobRequest {
  string profile  = 1;
  float  interval = 2;
  float  maxrps   = 3;

  string host     = 4;
}

message Counter {
  float value = 1;
}

message Gauge {
  float value = 1;
}

message Rate {
  float value    = 1;
  float duration = 2;
}

message Histogram {
}

message Metric {
  string name           = 1;
  string description    = 2;
  oneof U {
    Counter counter     = 3;
    Gauge gauge         = 4;
    Rate rate           = 5;
    Histogram histogram = 6;
  }
}

message JobMetrics {
  repeated Metric metrics = 1;
}
