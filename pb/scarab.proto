// This file is part of scarab.


syntax = "proto3";
option go_package = "github.com/tcolgate/scarab/scarab";

package scarab;

import 'metrics.proto'; // import prom metrics definitions

service Manager {
  rpc RegisterProfile (RegisterProfileRequest) returns (stream KeepAlive) {};
}

message ProfileArgOption {
  repeated string option = 1;
}

message ProfileArg {
  string name                 = 1;
  string description          = 2;
  oneof default {
    string string             = 3;
    float  float              = 4;
    ProfileArgOption option   = 5;
  }
}

message RegisterProfileRequest {
  string profile            = 1;
  string version            = 2;
  string addr               = 3;
  string name               = 4;

  repeated ProfileArg args  = 5;
}

message KeepAlive{
}

service Worker {
  rpc ReportLoad(ReportLoadRequest) returns (stream LoadMetrics) {};
  rpc RunJob(stream RunJobRequest) returns (stream JobMetrics) {};
}


message ReportLoadRequest {
  float interval = 1;
}

message LoadMetrics {
  repeated io.prometheus.client.MetricFamily metrics = 1;
}

message JobArg {
  string name                 = 1;
  oneof value {
    string string             = 2;
    float  float              = 3;
  }
}

message RunJobRequest {
  string profile       = 1;
  float  interval      = 2;
  float  maxrps        = 3;

  repeated JobArg args = 4;
}

message JobMetrics {
  repeated io.prometheus.client.MetricFamily metrics = 1;
}

message StartJobRequest {
}

message StartJobResponse {
}

message ListProfilesRequest {
}

message ListProfilesResponse {
}

message WatchActiveJobsRequest {
}

message WatchActiveJobsResponse {
}

service ManagerUI {
  rpc StartJob (StartJobRequest) returns (StartJobResponse) {};
  rpc ListProfiles (ListProfilesRequest) returns (ListProfilesResponse) {};
  rpc WatchActiveJobs (WatchActiveJobsRequest) returns (stream WatchActiveJobsResponse) {};
}

