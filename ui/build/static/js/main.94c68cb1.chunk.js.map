{"version":3,"sources":["ProfilesTable.tsx","Routes.tsx","NavigationBar.tsx","App.tsx","theme.tsx","index.tsx","scarab-ui_pb.js","scarab-common_pb.js","scarab-ui_pb_service.js"],"names":["useRowStyles","makeStyles","root","borderBottom","Row","props","React","useState","open","setOpen","profile","spec","getSpec","firstReg","getFirstregistration","workers","getWorkersList","classes","Fragment","TableRow","className","TableCell","IconButton","aria-label","size","onClick","component","scope","getProfile","getVersion","toDate","length","ProfilesTable","profiles","error","state","setState","useEffect","req","ListProfilesRequest","ManagerUIClient","listProfiles","err","lpResp","getRegisteredList","TableContainer","Paper","Table","TableHead","TableBody","map","row","Routes","path","sidebarName","Fab","color","useStyles","theme","createStyles","flexGrow","menuButton","marginRight","spacing","title","drawer","width","fullList","withRouter","isOpen","setIsOpen","toggleDrawer","event","type","key","AppBar","position","Toolbar","edge","Typography","variant","Drawer","paper","onClose","role","onKeyDown","MenuList","prop","to","style","textDecoration","MenuItem","selected","routeName","location","pathname","ListItemText","primary","App","route","exact","createMuiTheme","palette","main","secondary","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","jspb","require","goog","global","Function","scarab$common_pb","object","extend","proto","exportSymbol","scarab","opt_data","Message","initialize","this","inherits","DEBUG","COMPILED","displayName","ListProfilesResponse","repeatedFields_","WatchActiveJobsRequest","WatchActiveJobsResponse","StopJobRequest","StopJobResponse","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","obj","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","registeredList","toObjectList","RegisteredProfile","value","readMessage","addRegistered","f","writeRepeatedMessage","getRepeatedWrapperField","setRegisteredList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearRegisteredList","id","getFieldWithDefault","readString","setId","getId","writeString","setProto3StringField","exports","google_protobuf_timestamp_pb","WorkerDetails","ProfileArg","ProfileSpec","JobArgOption","JobArgValue","oneofGroups_","JobArg","StartJobRequest","StartJobResponse","addr","name","setAddr","setName","undefined","getAddr","getName","firstregistration","Timestamp","workersList","setSpec","setFirstregistration","addWorkers","writeMessage","getWrapperField","setWrapperField","clearSpec","hasSpec","getField","clearFirstregistration","hasFirstregistration","setWorkersList","clearWorkersList","description","pb_default","getDefault","setDescription","setDefault","getDescription","clearDefault","hasDefault","version","argsList","getArgsList","setProfile","setVersion","addArgs","setArgsList","clearArgsList","optionList","getRepeatedField","multiple","getBooleanFieldWithDefault","addOption","readBool","setMultiple","getOptionList","writeRepeatedString","getMultiple","writeBool","setOptionList","setField","addToRepeatedField","clearOptionList","setProto3BooleanField","ValueCase","VALUE_NOT_SET","STRING","FLOAT","BOOL","OPTION","getValueCase","computeOneofCase","string","pb_float","getFloatingPointFieldWithDefault","bool","option","getOption","setString","readFloat","setFloat","setBool","setOption","writeFloat","getString","setOneofField","clearString","hasString","getFloat","clearFloat","hasFloat","getBool","clearBool","hasBool","setOneofWrapperField","clearOption","hasOption","getValue","setValue","clearValue","hasValue","scarab_ui_pb","scarab_common_pb","grpc","ManagerUI","serviceName","serviceHost","options","StartJob","methodName","service","requestStream","responseStream","requestType","responseType","StopJob","ListProfiles","WatchActiveJobs","startJob","requestMessage","metadata","callback","arguments","client","unary","request","host","transport","debug","onEnd","response","status","Code","OK","Error","statusMessage","code","trailers","cancel","close","stopJob","watchActiveJobs","listeners","data","end","invoke","onMessage","responseMessage","forEach","handler","details","on","push"],"mappings":"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","file":"static/js/main.94c68cb1.chunk.js","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nimport Moment from 'react-moment';\n\nimport {grpc} from \"@improbable-eng/grpc-web\";\nimport { ManagerUI } from './scarab-ui_pb_service';\nimport { ListProfilesRequest, ListProfilesResponse } from './scarab-ui_pb';\nimport { RegisteredProfile } from './scarab-common_pb';\nimport { ManagerUIClient } from './scarab-ui_pb_service';\n\nconst host = \"http://localhost:8081\";\n\nconst useRowStyles = makeStyles({\n    root: {\n          '& > *': {\n                  borderBottom: 'unset',\n                  },\n          },\n});\n\ntype RowProps = {\n  profile: RegisteredProfile\n};\n\nfunction Row(props: RowProps){\n    const [open, setOpen] = React.useState(false);\n    const {profile} = props\n    const spec = profile.getSpec()\n    const firstReg = profile.getFirstregistration()\n    const workers = profile.getWorkersList()\n    const classes = useRowStyles();\n\n    return (\n          <React.Fragment>\n            <TableRow className={classes.root}>\n              <TableCell>\n                <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n                  {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                </IconButton>\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                {spec?.getProfile() ?? \"unknown\"}\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                {spec?.getVersion() ?? \"unknown\"}\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                <Moment>{firstReg.toDate()}</Moment>\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                {workers?.length ?? 0}\n              </TableCell>\n            </TableRow>\n          </React.Fragment>\n        );\n}\n\ntype PTProps = {};\n\ntype PTState = {\n    profiles: RegisteredProfile[],\n    error: boolean\n};\n\nconst ProfilesTable: React.FC<PTProps> = (props: PTProps) => {\n  const [state, setState] = useState<PTState>({\n      profiles: [],\n      error: false,\n  })\n\n  useEffect(() => {\n    const req = new ListProfilesRequest();\n    const client = new ManagerUIClient(host);\n    client.listProfiles(req, (err, lpResp) => {\n      if (lpResp != null) {\n        setState({\n          profiles: lpResp.getRegisteredList(),\n          error: false\n        })\n      }\n    });\n  },[])\n  /*\n          {state.profiles.map((row :RegisteredProfile) => (Row(row)))}\n          */\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"collapsible table\">\n        <TableHead>\n          <TableRow>\n            <TableCell />\n            <TableCell>Name</TableCell>\n            <TableCell>Version</TableCell>\n            <TableCell>FirstRegistration</TableCell>\n            <TableCell>Workers</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {state.profiles.map((row :RegisteredProfile) => {\n            return (\n              <Row profile={row} />\n            )\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\n\nexport default ProfilesTable;\n","import React from 'react';\nimport ProfilesTable from './ProfilesTable';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst Jobs: React.FC = () => {\n    return (\n          <div>\n          <h1>Jobs</h1>\n            <Fab color=\"primary\" aria-label=\"add\">\n              <AddIcon />\n            </Fab>\n          </div>\n        );\n};\n\nconst Profiles: React.FC = () => {\n    return (\n          <div>\n            <h1>Profiles</h1>\n            <ProfilesTable />\n          </div>\n        );\n};\n\nconst Archive: React.FC = () => {\n    return (\n          <h1>Archive</h1>\n        );\n};\n\nconst Routes = [\n    {\n      path: '/',\n      sidebarName: 'Jobs',\n      component: Jobs\n    },\n    {\n      path: '/profiles',\n      sidebarName: 'Profiles',\n      component: Profiles\n    },\n    {\n      path: '/archive',\n      sidebarName: 'Archive',\n      component: Archive\n    },\n];\n\nexport default Routes;\n","import React, { useState } from 'react';\n\nimport { NavLink, withRouter } from 'react-router-dom';\nimport Routes from './Routes';\n\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Drawer,\n  MenuList,\n  MenuItem,\n  ListItemText,\n } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    drawer: {\n      width: 300,\n    },\n    fullList: {\n      width: 'auto',\n    },\n  }),\n);\n\nconst NavigationBar: React.FC = (props: any) => {\n  const classes = useStyles();\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleDrawer = (open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent,\n  ) => {\n    if (\n      event.type === 'keydown' &&\n      ((event as React.KeyboardEvent).key === 'Tab' ||\n        (event as React.KeyboardEvent).key === 'Shift')\n    ) {\n      return;\n    }\n\n    setIsOpen(open);\n  };\n\n  const activeRoute = (routeName: any) => {\n    return props.location.pathname === routeName ? true : false;\n  }\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(true)}>\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Scarab\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </div>\n      <Drawer classes={{ paper: classes.drawer }} open={isOpen} onClose={toggleDrawer(false)}>\n        <div\n          className={classes.fullList}\n          role=\"presentation\"\n          onClick={toggleDrawer(false)}\n          onKeyDown={toggleDrawer(false)}\n        >\n          <MenuList>\n            {Routes.map((prop, key) => {\n              return (\n                <NavLink to={prop.path} style={{ textDecoration: 'none' }} key={key}>\n                  <MenuItem selected={activeRoute(prop.path)}>\n                    <ListItemText primary={prop.sidebarName} />\n                  </MenuItem>\n                </NavLink>\n              );\n            })}\n          </MenuList>\n        </div>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default withRouter(NavigationBar);\n","import React , { MouseEvent, KeyboardEvent, useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Routes from './Routes';\nimport NavigationBar from './NavigationBar';\n\n\nconst App: React.FC = () => {\n    return (\n          <div>\n            <NavigationBar />\n            <Switch>\n              {Routes.map((route: any) => (\n                          <Route exact path={route.path} key={route.path}>\n                            <route.component />\n                          </Route>\n                        ))}\n            </Switch>\n          </div>\n        );\n}\n\nexport default App;\n","import red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n  </ThemeProvider>,\n\n  document.getElementById('root')\n);\n","// source: scarab-ui.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar scarab$common_pb = require('./scarab-common_pb.js');\ngoog.object.extend(proto, scarab$common_pb);\ngoog.exportSymbol('proto.scarab.ListProfilesRequest', null, global);\ngoog.exportSymbol('proto.scarab.ListProfilesResponse', null, global);\ngoog.exportSymbol('proto.scarab.StopJobRequest', null, global);\ngoog.exportSymbol('proto.scarab.StopJobResponse', null, global);\ngoog.exportSymbol('proto.scarab.WatchActiveJobsRequest', null, global);\ngoog.exportSymbol('proto.scarab.WatchActiveJobsResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.ListProfilesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.scarab.ListProfilesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.ListProfilesRequest.displayName = 'proto.scarab.ListProfilesRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.ListProfilesResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.scarab.ListProfilesResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.scarab.ListProfilesResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.ListProfilesResponse.displayName = 'proto.scarab.ListProfilesResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.WatchActiveJobsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.scarab.WatchActiveJobsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.WatchActiveJobsRequest.displayName = 'proto.scarab.WatchActiveJobsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.WatchActiveJobsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.scarab.WatchActiveJobsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.WatchActiveJobsResponse.displayName = 'proto.scarab.WatchActiveJobsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.StopJobRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.scarab.StopJobRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.StopJobRequest.displayName = 'proto.scarab.StopJobRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.StopJobResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.scarab.StopJobResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.StopJobResponse.displayName = 'proto.scarab.StopJobResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.ListProfilesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.ListProfilesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.ListProfilesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.ListProfilesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.ListProfilesRequest}\n */\nproto.scarab.ListProfilesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.ListProfilesRequest;\n  return proto.scarab.ListProfilesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.ListProfilesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.ListProfilesRequest}\n */\nproto.scarab.ListProfilesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.ListProfilesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.ListProfilesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.ListProfilesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.ListProfilesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.scarab.ListProfilesResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.ListProfilesResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.ListProfilesResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.ListProfilesResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.ListProfilesResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    registeredList: jspb.Message.toObjectList(msg.getRegisteredList(),\n    scarab$common_pb.RegisteredProfile.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.ListProfilesResponse}\n */\nproto.scarab.ListProfilesResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.ListProfilesResponse;\n  return proto.scarab.ListProfilesResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.ListProfilesResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.ListProfilesResponse}\n */\nproto.scarab.ListProfilesResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new scarab$common_pb.RegisteredProfile;\n      reader.readMessage(value,scarab$common_pb.RegisteredProfile.deserializeBinaryFromReader);\n      msg.addRegistered(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.ListProfilesResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.ListProfilesResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.ListProfilesResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.ListProfilesResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRegisteredList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      scarab$common_pb.RegisteredProfile.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated RegisteredProfile registered = 1;\n * @return {!Array<!proto.scarab.RegisteredProfile>}\n */\nproto.scarab.ListProfilesResponse.prototype.getRegisteredList = function() {\n  return /** @type{!Array<!proto.scarab.RegisteredProfile>} */ (\n    jspb.Message.getRepeatedWrapperField(this, scarab$common_pb.RegisteredProfile, 1));\n};\n\n\n/**\n * @param {!Array<!proto.scarab.RegisteredProfile>} value\n * @return {!proto.scarab.ListProfilesResponse} returns this\n*/\nproto.scarab.ListProfilesResponse.prototype.setRegisteredList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.scarab.RegisteredProfile=} opt_value\n * @param {number=} opt_index\n * @return {!proto.scarab.RegisteredProfile}\n */\nproto.scarab.ListProfilesResponse.prototype.addRegistered = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.scarab.RegisteredProfile, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.scarab.ListProfilesResponse} returns this\n */\nproto.scarab.ListProfilesResponse.prototype.clearRegisteredList = function() {\n  return this.setRegisteredList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.WatchActiveJobsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.WatchActiveJobsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.WatchActiveJobsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.WatchActiveJobsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.WatchActiveJobsRequest}\n */\nproto.scarab.WatchActiveJobsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.WatchActiveJobsRequest;\n  return proto.scarab.WatchActiveJobsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.WatchActiveJobsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.WatchActiveJobsRequest}\n */\nproto.scarab.WatchActiveJobsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.WatchActiveJobsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.WatchActiveJobsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.WatchActiveJobsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.WatchActiveJobsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.WatchActiveJobsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.WatchActiveJobsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.WatchActiveJobsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.WatchActiveJobsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.WatchActiveJobsResponse}\n */\nproto.scarab.WatchActiveJobsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.WatchActiveJobsResponse;\n  return proto.scarab.WatchActiveJobsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.WatchActiveJobsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.WatchActiveJobsResponse}\n */\nproto.scarab.WatchActiveJobsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.WatchActiveJobsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.WatchActiveJobsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.WatchActiveJobsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.WatchActiveJobsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.StopJobRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.StopJobRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.StopJobRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.StopJobRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.StopJobRequest}\n */\nproto.scarab.StopJobRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.StopJobRequest;\n  return proto.scarab.StopJobRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.StopJobRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.StopJobRequest}\n */\nproto.scarab.StopJobRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.StopJobRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.StopJobRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.StopJobRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.StopJobRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.scarab.StopJobRequest.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.StopJobRequest} returns this\n */\nproto.scarab.StopJobRequest.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.StopJobResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.StopJobResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.StopJobResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.StopJobResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.StopJobResponse}\n */\nproto.scarab.StopJobResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.StopJobResponse;\n  return proto.scarab.StopJobResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.StopJobResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.StopJobResponse}\n */\nproto.scarab.StopJobResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.StopJobResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.StopJobResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.StopJobResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.StopJobResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\ngoog.object.extend(exports, proto.scarab);\n","// source: scarab-common.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');\ngoog.object.extend(proto, google_protobuf_timestamp_pb);\ngoog.exportSymbol('proto.scarab.JobArg', null, global);\ngoog.exportSymbol('proto.scarab.JobArgOption', null, global);\ngoog.exportSymbol('proto.scarab.JobArgValue', null, global);\ngoog.exportSymbol('proto.scarab.JobArgValue.ValueCase', null, global);\ngoog.exportSymbol('proto.scarab.ProfileArg', null, global);\ngoog.exportSymbol('proto.scarab.ProfileSpec', null, global);\ngoog.exportSymbol('proto.scarab.RegisteredProfile', null, global);\ngoog.exportSymbol('proto.scarab.StartJobRequest', null, global);\ngoog.exportSymbol('proto.scarab.StartJobResponse', null, global);\ngoog.exportSymbol('proto.scarab.WorkerDetails', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.WorkerDetails = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.scarab.WorkerDetails, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.WorkerDetails.displayName = 'proto.scarab.WorkerDetails';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.RegisteredProfile = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.scarab.RegisteredProfile.repeatedFields_, null);\n};\ngoog.inherits(proto.scarab.RegisteredProfile, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.RegisteredProfile.displayName = 'proto.scarab.RegisteredProfile';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.ProfileArg = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.scarab.ProfileArg, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.ProfileArg.displayName = 'proto.scarab.ProfileArg';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.ProfileSpec = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.scarab.ProfileSpec.repeatedFields_, null);\n};\ngoog.inherits(proto.scarab.ProfileSpec, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.ProfileSpec.displayName = 'proto.scarab.ProfileSpec';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.JobArgOption = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.scarab.JobArgOption.repeatedFields_, null);\n};\ngoog.inherits(proto.scarab.JobArgOption, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.JobArgOption.displayName = 'proto.scarab.JobArgOption';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.JobArgValue = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.scarab.JobArgValue.oneofGroups_);\n};\ngoog.inherits(proto.scarab.JobArgValue, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.JobArgValue.displayName = 'proto.scarab.JobArgValue';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.JobArg = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.scarab.JobArg, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.JobArg.displayName = 'proto.scarab.JobArg';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.StartJobRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.scarab.StartJobRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.scarab.StartJobRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.StartJobRequest.displayName = 'proto.scarab.StartJobRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.StartJobResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.scarab.StartJobResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.StartJobResponse.displayName = 'proto.scarab.StartJobResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.WorkerDetails.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.WorkerDetails.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.WorkerDetails} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.WorkerDetails.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addr: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    name: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.WorkerDetails}\n */\nproto.scarab.WorkerDetails.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.WorkerDetails;\n  return proto.scarab.WorkerDetails.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.WorkerDetails} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.WorkerDetails}\n */\nproto.scarab.WorkerDetails.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddr(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.WorkerDetails.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.WorkerDetails.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.WorkerDetails} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.WorkerDetails.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string addr = 1;\n * @return {string}\n */\nproto.scarab.WorkerDetails.prototype.getAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.WorkerDetails} returns this\n */\nproto.scarab.WorkerDetails.prototype.setAddr = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.scarab.WorkerDetails.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.WorkerDetails} returns this\n */\nproto.scarab.WorkerDetails.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.scarab.RegisteredProfile.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.RegisteredProfile.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.RegisteredProfile.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.RegisteredProfile} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.RegisteredProfile.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    spec: (f = msg.getSpec()) && proto.scarab.ProfileSpec.toObject(includeInstance, f),\n    firstregistration: (f = msg.getFirstregistration()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n    workersList: jspb.Message.toObjectList(msg.getWorkersList(),\n    proto.scarab.WorkerDetails.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.RegisteredProfile}\n */\nproto.scarab.RegisteredProfile.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.RegisteredProfile;\n  return proto.scarab.RegisteredProfile.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.RegisteredProfile} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.RegisteredProfile}\n */\nproto.scarab.RegisteredProfile.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.scarab.ProfileSpec;\n      reader.readMessage(value,proto.scarab.ProfileSpec.deserializeBinaryFromReader);\n      msg.setSpec(value);\n      break;\n    case 2:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setFirstregistration(value);\n      break;\n    case 3:\n      var value = new proto.scarab.WorkerDetails;\n      reader.readMessage(value,proto.scarab.WorkerDetails.deserializeBinaryFromReader);\n      msg.addWorkers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.RegisteredProfile.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.RegisteredProfile.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.RegisteredProfile} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.RegisteredProfile.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSpec();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.scarab.ProfileSpec.serializeBinaryToWriter\n    );\n  }\n  f = message.getFirstregistration();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n  f = message.getWorkersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.scarab.WorkerDetails.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ProfileSpec spec = 1;\n * @return {?proto.scarab.ProfileSpec}\n */\nproto.scarab.RegisteredProfile.prototype.getSpec = function() {\n  return /** @type{?proto.scarab.ProfileSpec} */ (\n    jspb.Message.getWrapperField(this, proto.scarab.ProfileSpec, 1));\n};\n\n\n/**\n * @param {?proto.scarab.ProfileSpec|undefined} value\n * @return {!proto.scarab.RegisteredProfile} returns this\n*/\nproto.scarab.RegisteredProfile.prototype.setSpec = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.scarab.RegisteredProfile} returns this\n */\nproto.scarab.RegisteredProfile.prototype.clearSpec = function() {\n  return this.setSpec(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.scarab.RegisteredProfile.prototype.hasSpec = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional google.protobuf.Timestamp firstRegistration = 2;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.scarab.RegisteredProfile.prototype.getFirstregistration = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));\n};\n\n\n/**\n * @param {?proto.google.protobuf.Timestamp|undefined} value\n * @return {!proto.scarab.RegisteredProfile} returns this\n*/\nproto.scarab.RegisteredProfile.prototype.setFirstregistration = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.scarab.RegisteredProfile} returns this\n */\nproto.scarab.RegisteredProfile.prototype.clearFirstregistration = function() {\n  return this.setFirstregistration(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.scarab.RegisteredProfile.prototype.hasFirstregistration = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * repeated WorkerDetails workers = 3;\n * @return {!Array<!proto.scarab.WorkerDetails>}\n */\nproto.scarab.RegisteredProfile.prototype.getWorkersList = function() {\n  return /** @type{!Array<!proto.scarab.WorkerDetails>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.scarab.WorkerDetails, 3));\n};\n\n\n/**\n * @param {!Array<!proto.scarab.WorkerDetails>} value\n * @return {!proto.scarab.RegisteredProfile} returns this\n*/\nproto.scarab.RegisteredProfile.prototype.setWorkersList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.scarab.WorkerDetails=} opt_value\n * @param {number=} opt_index\n * @return {!proto.scarab.WorkerDetails}\n */\nproto.scarab.RegisteredProfile.prototype.addWorkers = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.scarab.WorkerDetails, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.scarab.RegisteredProfile} returns this\n */\nproto.scarab.RegisteredProfile.prototype.clearWorkersList = function() {\n  return this.setWorkersList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.ProfileArg.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.ProfileArg.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.ProfileArg} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.ProfileArg.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    description: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    pb_default: (f = msg.getDefault()) && proto.scarab.JobArgValue.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.ProfileArg}\n */\nproto.scarab.ProfileArg.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.ProfileArg;\n  return proto.scarab.ProfileArg.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.ProfileArg} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.ProfileArg}\n */\nproto.scarab.ProfileArg.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 3:\n      var value = new proto.scarab.JobArgValue;\n      reader.readMessage(value,proto.scarab.JobArgValue.deserializeBinaryFromReader);\n      msg.setDefault(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.ProfileArg.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.ProfileArg.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.ProfileArg} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.ProfileArg.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getDefault();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.scarab.JobArgValue.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.scarab.ProfileArg.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.ProfileArg} returns this\n */\nproto.scarab.ProfileArg.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string description = 2;\n * @return {string}\n */\nproto.scarab.ProfileArg.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.ProfileArg} returns this\n */\nproto.scarab.ProfileArg.prototype.setDescription = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional JobArgValue default = 3;\n * @return {?proto.scarab.JobArgValue}\n */\nproto.scarab.ProfileArg.prototype.getDefault = function() {\n  return /** @type{?proto.scarab.JobArgValue} */ (\n    jspb.Message.getWrapperField(this, proto.scarab.JobArgValue, 3));\n};\n\n\n/**\n * @param {?proto.scarab.JobArgValue|undefined} value\n * @return {!proto.scarab.ProfileArg} returns this\n*/\nproto.scarab.ProfileArg.prototype.setDefault = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.scarab.ProfileArg} returns this\n */\nproto.scarab.ProfileArg.prototype.clearDefault = function() {\n  return this.setDefault(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.scarab.ProfileArg.prototype.hasDefault = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.scarab.ProfileSpec.repeatedFields_ = [4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.ProfileSpec.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.ProfileSpec.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.ProfileSpec} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.ProfileSpec.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profile: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    version: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    description: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    argsList: jspb.Message.toObjectList(msg.getArgsList(),\n    proto.scarab.ProfileArg.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.ProfileSpec}\n */\nproto.scarab.ProfileSpec.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.ProfileSpec;\n  return proto.scarab.ProfileSpec.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.ProfileSpec} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.ProfileSpec}\n */\nproto.scarab.ProfileSpec.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfile(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVersion(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 4:\n      var value = new proto.scarab.ProfileArg;\n      reader.readMessage(value,proto.scarab.ProfileArg.deserializeBinaryFromReader);\n      msg.addArgs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.ProfileSpec.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.ProfileSpec.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.ProfileSpec} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.ProfileSpec.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfile();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getVersion();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getArgsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.scarab.ProfileArg.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string profile = 1;\n * @return {string}\n */\nproto.scarab.ProfileSpec.prototype.getProfile = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.ProfileSpec} returns this\n */\nproto.scarab.ProfileSpec.prototype.setProfile = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string version = 2;\n * @return {string}\n */\nproto.scarab.ProfileSpec.prototype.getVersion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.ProfileSpec} returns this\n */\nproto.scarab.ProfileSpec.prototype.setVersion = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string description = 3;\n * @return {string}\n */\nproto.scarab.ProfileSpec.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.ProfileSpec} returns this\n */\nproto.scarab.ProfileSpec.prototype.setDescription = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * repeated ProfileArg args = 4;\n * @return {!Array<!proto.scarab.ProfileArg>}\n */\nproto.scarab.ProfileSpec.prototype.getArgsList = function() {\n  return /** @type{!Array<!proto.scarab.ProfileArg>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.scarab.ProfileArg, 4));\n};\n\n\n/**\n * @param {!Array<!proto.scarab.ProfileArg>} value\n * @return {!proto.scarab.ProfileSpec} returns this\n*/\nproto.scarab.ProfileSpec.prototype.setArgsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.scarab.ProfileArg=} opt_value\n * @param {number=} opt_index\n * @return {!proto.scarab.ProfileArg}\n */\nproto.scarab.ProfileSpec.prototype.addArgs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.scarab.ProfileArg, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.scarab.ProfileSpec} returns this\n */\nproto.scarab.ProfileSpec.prototype.clearArgsList = function() {\n  return this.setArgsList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.scarab.JobArgOption.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.JobArgOption.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.JobArgOption.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.JobArgOption} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.JobArgOption.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    optionList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n    multiple: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.JobArgOption}\n */\nproto.scarab.JobArgOption.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.JobArgOption;\n  return proto.scarab.JobArgOption.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.JobArgOption} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.JobArgOption}\n */\nproto.scarab.JobArgOption.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addOption(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setMultiple(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.JobArgOption.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.JobArgOption.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.JobArgOption} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.JobArgOption.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOptionList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      1,\n      f\n    );\n  }\n  f = message.getMultiple();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated string option = 1;\n * @return {!Array<string>}\n */\nproto.scarab.JobArgOption.prototype.getOptionList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.scarab.JobArgOption} returns this\n */\nproto.scarab.JobArgOption.prototype.setOptionList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.scarab.JobArgOption} returns this\n */\nproto.scarab.JobArgOption.prototype.addOption = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.scarab.JobArgOption} returns this\n */\nproto.scarab.JobArgOption.prototype.clearOptionList = function() {\n  return this.setOptionList([]);\n};\n\n\n/**\n * optional bool multiple = 2;\n * @return {boolean}\n */\nproto.scarab.JobArgOption.prototype.getMultiple = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.scarab.JobArgOption} returns this\n */\nproto.scarab.JobArgOption.prototype.setMultiple = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.scarab.JobArgValue.oneofGroups_ = [[1,2,3,4]];\n\n/**\n * @enum {number}\n */\nproto.scarab.JobArgValue.ValueCase = {\n  VALUE_NOT_SET: 0,\n  STRING: 1,\n  FLOAT: 2,\n  BOOL: 3,\n  OPTION: 4\n};\n\n/**\n * @return {proto.scarab.JobArgValue.ValueCase}\n */\nproto.scarab.JobArgValue.prototype.getValueCase = function() {\n  return /** @type {proto.scarab.JobArgValue.ValueCase} */(jspb.Message.computeOneofCase(this, proto.scarab.JobArgValue.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.JobArgValue.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.JobArgValue.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.JobArgValue} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.JobArgValue.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    string: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    pb_float: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),\n    bool: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),\n    option: (f = msg.getOption()) && proto.scarab.JobArgOption.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.JobArgValue}\n */\nproto.scarab.JobArgValue.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.JobArgValue;\n  return proto.scarab.JobArgValue.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.JobArgValue} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.JobArgValue}\n */\nproto.scarab.JobArgValue.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setString(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setFloat(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setBool(value);\n      break;\n    case 4:\n      var value = new proto.scarab.JobArgOption;\n      reader.readMessage(value,proto.scarab.JobArgOption.deserializeBinaryFromReader);\n      msg.setOption(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.JobArgValue.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.JobArgValue.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.JobArgValue} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.JobArgValue.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeFloat(\n      2,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getOption();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.scarab.JobArgOption.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string string = 1;\n * @return {string}\n */\nproto.scarab.JobArgValue.prototype.getString = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.JobArgValue} returns this\n */\nproto.scarab.JobArgValue.prototype.setString = function(value) {\n  return jspb.Message.setOneofField(this, 1, proto.scarab.JobArgValue.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.scarab.JobArgValue} returns this\n */\nproto.scarab.JobArgValue.prototype.clearString = function() {\n  return jspb.Message.setOneofField(this, 1, proto.scarab.JobArgValue.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.scarab.JobArgValue.prototype.hasString = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional float float = 2;\n * @return {number}\n */\nproto.scarab.JobArgValue.prototype.getFloat = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.scarab.JobArgValue} returns this\n */\nproto.scarab.JobArgValue.prototype.setFloat = function(value) {\n  return jspb.Message.setOneofField(this, 2, proto.scarab.JobArgValue.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.scarab.JobArgValue} returns this\n */\nproto.scarab.JobArgValue.prototype.clearFloat = function() {\n  return jspb.Message.setOneofField(this, 2, proto.scarab.JobArgValue.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.scarab.JobArgValue.prototype.hasFloat = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bool bool = 3;\n * @return {boolean}\n */\nproto.scarab.JobArgValue.prototype.getBool = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.scarab.JobArgValue} returns this\n */\nproto.scarab.JobArgValue.prototype.setBool = function(value) {\n  return jspb.Message.setOneofField(this, 3, proto.scarab.JobArgValue.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.scarab.JobArgValue} returns this\n */\nproto.scarab.JobArgValue.prototype.clearBool = function() {\n  return jspb.Message.setOneofField(this, 3, proto.scarab.JobArgValue.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.scarab.JobArgValue.prototype.hasBool = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional JobArgOption option = 4;\n * @return {?proto.scarab.JobArgOption}\n */\nproto.scarab.JobArgValue.prototype.getOption = function() {\n  return /** @type{?proto.scarab.JobArgOption} */ (\n    jspb.Message.getWrapperField(this, proto.scarab.JobArgOption, 4));\n};\n\n\n/**\n * @param {?proto.scarab.JobArgOption|undefined} value\n * @return {!proto.scarab.JobArgValue} returns this\n*/\nproto.scarab.JobArgValue.prototype.setOption = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 4, proto.scarab.JobArgValue.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.scarab.JobArgValue} returns this\n */\nproto.scarab.JobArgValue.prototype.clearOption = function() {\n  return this.setOption(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.scarab.JobArgValue.prototype.hasOption = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.JobArg.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.JobArg.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.JobArg} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.JobArg.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    value: (f = msg.getValue()) && proto.scarab.JobArgValue.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.JobArg}\n */\nproto.scarab.JobArg.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.JobArg;\n  return proto.scarab.JobArg.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.JobArg} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.JobArg}\n */\nproto.scarab.JobArg.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = new proto.scarab.JobArgValue;\n      reader.readMessage(value,proto.scarab.JobArgValue.deserializeBinaryFromReader);\n      msg.setValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.JobArg.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.JobArg.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.JobArg} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.JobArg.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getValue();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.scarab.JobArgValue.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.scarab.JobArg.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.JobArg} returns this\n */\nproto.scarab.JobArg.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional JobArgValue value = 2;\n * @return {?proto.scarab.JobArgValue}\n */\nproto.scarab.JobArg.prototype.getValue = function() {\n  return /** @type{?proto.scarab.JobArgValue} */ (\n    jspb.Message.getWrapperField(this, proto.scarab.JobArgValue, 2));\n};\n\n\n/**\n * @param {?proto.scarab.JobArgValue|undefined} value\n * @return {!proto.scarab.JobArg} returns this\n*/\nproto.scarab.JobArg.prototype.setValue = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.scarab.JobArg} returns this\n */\nproto.scarab.JobArg.prototype.clearValue = function() {\n  return this.setValue(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.scarab.JobArg.prototype.hasValue = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.scarab.StartJobRequest.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.StartJobRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.StartJobRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.StartJobRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.StartJobRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profile: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    version: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    argsList: jspb.Message.toObjectList(msg.getArgsList(),\n    proto.scarab.JobArg.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.StartJobRequest}\n */\nproto.scarab.StartJobRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.StartJobRequest;\n  return proto.scarab.StartJobRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.StartJobRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.StartJobRequest}\n */\nproto.scarab.StartJobRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfile(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVersion(value);\n      break;\n    case 3:\n      var value = new proto.scarab.JobArg;\n      reader.readMessage(value,proto.scarab.JobArg.deserializeBinaryFromReader);\n      msg.addArgs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.StartJobRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.StartJobRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.StartJobRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.StartJobRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfile();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getVersion();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getArgsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.scarab.JobArg.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string profile = 1;\n * @return {string}\n */\nproto.scarab.StartJobRequest.prototype.getProfile = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.StartJobRequest} returns this\n */\nproto.scarab.StartJobRequest.prototype.setProfile = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string version = 2;\n * @return {string}\n */\nproto.scarab.StartJobRequest.prototype.getVersion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.StartJobRequest} returns this\n */\nproto.scarab.StartJobRequest.prototype.setVersion = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * repeated JobArg args = 3;\n * @return {!Array<!proto.scarab.JobArg>}\n */\nproto.scarab.StartJobRequest.prototype.getArgsList = function() {\n  return /** @type{!Array<!proto.scarab.JobArg>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.scarab.JobArg, 3));\n};\n\n\n/**\n * @param {!Array<!proto.scarab.JobArg>} value\n * @return {!proto.scarab.StartJobRequest} returns this\n*/\nproto.scarab.StartJobRequest.prototype.setArgsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.scarab.JobArg=} opt_value\n * @param {number=} opt_index\n * @return {!proto.scarab.JobArg}\n */\nproto.scarab.StartJobRequest.prototype.addArgs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.scarab.JobArg, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.scarab.StartJobRequest} returns this\n */\nproto.scarab.StartJobRequest.prototype.clearArgsList = function() {\n  return this.setArgsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.StartJobResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.StartJobResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.StartJobResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.StartJobResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.StartJobResponse}\n */\nproto.scarab.StartJobResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.StartJobResponse;\n  return proto.scarab.StartJobResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.StartJobResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.StartJobResponse}\n */\nproto.scarab.StartJobResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.StartJobResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.StartJobResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.StartJobResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.StartJobResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.scarab.StartJobResponse.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.StartJobResponse} returns this\n */\nproto.scarab.StartJobResponse.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\ngoog.object.extend(exports, proto.scarab);\n","// package: scarab\n// file: scarab-ui.proto\n\nvar scarab_ui_pb = require(\"./scarab-ui_pb\");\nvar scarab_common_pb = require(\"./scarab-common_pb\");\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar ManagerUI = (function () {\n  function ManagerUI() {}\n  ManagerUI.serviceName = \"scarab.ManagerUI\";\n  return ManagerUI;\n}());\n\nManagerUI.StartJob = {\n  methodName: \"StartJob\",\n  service: ManagerUI,\n  requestStream: false,\n  responseStream: false,\n  requestType: scarab_common_pb.StartJobRequest,\n  responseType: scarab_common_pb.StartJobResponse\n};\n\nManagerUI.StopJob = {\n  methodName: \"StopJob\",\n  service: ManagerUI,\n  requestStream: false,\n  responseStream: false,\n  requestType: scarab_ui_pb.StopJobRequest,\n  responseType: scarab_ui_pb.StopJobResponse\n};\n\nManagerUI.ListProfiles = {\n  methodName: \"ListProfiles\",\n  service: ManagerUI,\n  requestStream: false,\n  responseStream: false,\n  requestType: scarab_ui_pb.ListProfilesRequest,\n  responseType: scarab_ui_pb.ListProfilesResponse\n};\n\nManagerUI.WatchActiveJobs = {\n  methodName: \"WatchActiveJobs\",\n  service: ManagerUI,\n  requestStream: false,\n  responseStream: true,\n  requestType: scarab_ui_pb.WatchActiveJobsRequest,\n  responseType: scarab_ui_pb.WatchActiveJobsResponse\n};\n\nexports.ManagerUI = ManagerUI;\n\nfunction ManagerUIClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nManagerUIClient.prototype.startJob = function startJob(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(ManagerUI.StartJob, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nManagerUIClient.prototype.stopJob = function stopJob(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(ManagerUI.StopJob, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nManagerUIClient.prototype.listProfiles = function listProfiles(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(ManagerUI.ListProfiles, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nManagerUIClient.prototype.watchActiveJobs = function watchActiveJobs(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(ManagerUI.WatchActiveJobs, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nexports.ManagerUIClient = ManagerUIClient;\n\n"],"sourceRoot":""}