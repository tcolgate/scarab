{"version":3,"sources":["ProfilesTable.tsx","Routes.tsx","NavigationBar.tsx","App.tsx","theme.tsx","index.tsx","scarab-ui_pb.js","scarab-common_pb.js","scarab-ui_pb_service.js"],"names":["useRowStyles","makeStyles","root","borderBottom","createData","name","calories","fat","carbs","protein","price","history","date","customerId","amount","Row","props","row","React","useState","open","setOpen","classes","Fragment","TableRow","className","TableCell","IconButton","aria-label","size","onClick","component","scope","align","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Typography","variant","gutterBottom","Table","TableHead","TableBody","map","historyRow","Math","round","rows","ProfilesTable","fetch","req","ListProfilesRequest","ManagerUIClient","listProfiles","err","lpResp","console","log","setState","profiles","state","ListProfilesResponse","error","this","Container","TableContainer","Paper","Component","Routes","path","sidebarName","Fab","color","useStyles","theme","createStyles","flexGrow","menuButton","marginRight","spacing","title","drawer","width","fullList","withRouter","isOpen","setIsOpen","toggleDrawer","event","type","key","AppBar","position","Toolbar","edge","Drawer","paper","onClose","role","onKeyDown","MenuList","prop","to","textDecoration","MenuItem","selected","routeName","location","pathname","ListItemText","primary","App","route","exact","createMuiTheme","palette","main","secondary","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","jspb","require","goog","global","Function","scarab$common_pb","object","extend","proto","exportSymbol","scarab","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","repeatedFields_","WatchActiveJobsRequest","WatchActiveJobsResponse","StopJobRequest","StopJobResponse","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","obj","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","registeredList","toObjectList","getRegisteredList","RegiteredProfile","value","readMessage","addRegistered","f","length","writeRepeatedMessage","getRepeatedWrapperField","setRegisteredList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearRegisteredList","id","getFieldWithDefault","readString","setId","getId","writeString","setProto3StringField","exports","google_protobuf_timestamp_pb","WorkerDetails","ProfileArg","ProfileSpec","JobArgOption","JobArgValue","oneofGroups_","JobArg","StartJobRequest","StartJobResponse","addr","setAddr","setName","undefined","getAddr","getName","spec","getSpec","firstregistration","getFirstregistration","Timestamp","workersList","getWorkersList","setSpec","setFirstregistration","addWorkers","writeMessage","getWrapperField","setWrapperField","clearSpec","hasSpec","getField","clearFirstregistration","hasFirstregistration","setWorkersList","clearWorkersList","description","pb_default","getDefault","setDescription","setDefault","getDescription","clearDefault","hasDefault","profile","version","argsList","getArgsList","setProfile","setVersion","addArgs","getProfile","getVersion","setArgsList","clearArgsList","optionList","getRepeatedField","multiple","getBooleanFieldWithDefault","addOption","readBool","setMultiple","getOptionList","writeRepeatedString","getMultiple","writeBool","setOptionList","setField","addToRepeatedField","clearOptionList","setProto3BooleanField","ValueCase","VALUE_NOT_SET","STRING","FLOAT","BOOL","OPTION","getValueCase","computeOneofCase","string","pb_float","getFloatingPointFieldWithDefault","bool","option","getOption","setString","readFloat","setFloat","setBool","setOption","writeFloat","getString","setOneofField","clearString","hasString","getFloat","clearFloat","hasFloat","getBool","clearBool","hasBool","setOneofWrapperField","clearOption","hasOption","getValue","setValue","clearValue","hasValue","scarab_ui_pb","scarab_common_pb","grpc","ManagerUI","serviceName","serviceHost","options","StartJob","methodName","service","requestStream","responseStream","requestType","responseType","StopJob","ListProfiles","WatchActiveJobs","startJob","requestMessage","metadata","callback","arguments","client","unary","request","host","transport","debug","onEnd","response","status","Code","OK","Error","statusMessage","code","trailers","cancel","close","stopJob","watchActiveJobs","listeners","data","end","invoke","onMessage","responseMessage","forEach","handler","details","on","push"],"mappings":"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","file":"static/js/main.857c29bc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nimport {grpc} from \"@improbable-eng/grpc-web\";\nimport { ManagerUI } from './scarab-ui_pb_service';\nimport { ListProfilesRequest, ListProfilesResponse } from './scarab-ui_pb';\nimport { StartJobRequest, StartJobResponse } from './scarab-common_pb';\nimport { ManagerUIClient } from './scarab-ui_pb_service';\n\nconst host = \"http://localhost:8081\";\n\nfunction listProfiles() {\n}\n\n\nconst useRowStyles = makeStyles({\n    root: {\n          '& > *': {\n                  borderBottom: 'unset',\n                  },\n          },\n});\n\nfunction createData(name :string, calories :number, fat :number, carbs :number, protein :number, price :number) {\n    return {\n          name,\n          calories,\n          fat,\n          carbs,\n          protein,\n          price,\n          history: [\n                  { date: '2020-01-05', customerId: '11091700', amount: 3 },\n                  { date: '2020-01-02', customerId: 'Anonymous', amount: 1 },\n                ],\n        };\n}\n\nfunction Row(props :any) {\n    const { row } = props;\n    const [open, setOpen] = React.useState(false);\n    const classes = useRowStyles();\n\n    return (\n          <React.Fragment>\n            <TableRow className={classes.root}>\n              <TableCell>\n                <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n                  {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                </IconButton>\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.calories}</TableCell>\n              <TableCell align=\"right\">{row.fat}</TableCell>\n              <TableCell align=\"right\">{row.carbs}</TableCell>\n              <TableCell align=\"right\">{row.protein}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                  <Box margin={1}>\n                    <Typography variant=\"h6\" gutterBottom component=\"div\">\n                      History\n                    </Typography>\n                    <Table size=\"small\" aria-label=\"purchases\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Date</TableCell>\n                          <TableCell>Customer</TableCell>\n                          <TableCell align=\"right\">Amount</TableCell>\n                          <TableCell align=\"right\">Total price ($)</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {row.history.map((historyRow :any) => (\n                                              <TableRow key={historyRow.date}>\n                                                <TableCell component=\"th\" scope=\"row\">\n                                                  {historyRow.date}\n                                                </TableCell>\n                                                <TableCell>{historyRow.customerId}</TableCell>\n                                                <TableCell align=\"right\">{historyRow.amount}</TableCell>\n                                                <TableCell align=\"right\">\n                                                  {Math.round(historyRow.amount * row.price * 100) / 100}\n                                                </TableCell>\n                                              </TableRow>\n                                            ))}\n                      </TableBody>\n                    </Table>\n                  </Box>\n                </Collapse>\n              </TableCell>\n            </TableRow>\n          </React.Fragment>\n        );\n}\n\nRow.propTypes = {\n    row: PropTypes.shape({\n          calories: PropTypes.number.isRequired,\n          carbs: PropTypes.number.isRequired,\n          fat: PropTypes.number.isRequired,\n          history: PropTypes.arrayOf(\n                  PropTypes.shape({\n                            amount: PropTypes.number.isRequired,\n                            customerId: PropTypes.string.isRequired,\n                            date: PropTypes.string.isRequired,\n                          }),\n                ).isRequired,\n          name: PropTypes.string.isRequired,\n          price: PropTypes.number.isRequired,\n          protein: PropTypes.number.isRequired,\n        }).isRequired,\n};\n\nconst rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\n    createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\n    createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\n    createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\n];\n\ntype PTProps = {};\n\ntype PTState = {\n    profiles: any,\n    error: boolean\n};\n\nclass ProfilesTable extends Component<PTProps, PTState>{\n  constructor(props: PTProps) {\n    super(props);\n    this.state = {\n      profiles: new ListProfilesResponse(),\n      error: false\n    };\n  };\n  fetch = () => {\n    const req = new ListProfilesRequest();\n    const client = new ManagerUIClient(host);\n    client.listProfiles(req, (err, lpResp) => {\n      console.log(err)\n      console.log(lpResp)\n      this.setState({\n        profiles: lpResp,\n      })\n    });\n  };\n\n  componentDidMount() {\n    this.fetch();\n  };\n\n  render() {\n    return (\n      <Container>\n        <TableContainer component={Paper}>\n          <Table aria-label=\"collapsible table\">\n            <TableHead>\n              <TableRow>\n                <TableCell />\n                <TableCell>Name</TableCell>\n                <TableCell align=\"right\">Version</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map((row) => (\n                            <Row key={row.name} row={row} />\n                          ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Container>\n    );\n  }\n}\n\nexport default ProfilesTable;\n","import React from 'react';\nimport ProfilesTable from './ProfilesTable';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst Jobs: React.FC = () => {\n    return (\n          <div>\n          <h1>Jobs</h1>\n            <Fab color=\"primary\" aria-label=\"add\">\n              <AddIcon />\n            </Fab>\n          </div>\n        );\n};\n\nconst Profiles: React.FC = () => {\n    return (\n          <div>\n            <h1>Profiles</h1>\n            <ProfilesTable />\n          </div>\n        );\n};\n\nconst Archive: React.FC = () => {\n    return (\n          <h1>Archive</h1>\n        );\n};\n\nconst Routes = [\n    {\n      path: '/',\n      sidebarName: 'Jobs',\n      component: Jobs\n    },\n    {\n      path: '/profiles',\n      sidebarName: 'Profiles',\n      component: Profiles\n    },\n    {\n      path: '/archive',\n      sidebarName: 'Archive',\n      component: Archive\n    },\n];\n\nexport default Routes;\n","import React, { useState } from 'react';\n\nimport { NavLink, withRouter } from 'react-router-dom';\nimport Routes from './Routes';\n\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Drawer,\n  MenuList,\n  MenuItem,\n  ListItemText,\n } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    drawer: {\n      width: 300,\n    },\n    fullList: {\n      width: 'auto',\n    },\n  }),\n);\n\nconst NavigationBar: React.FC = (props: any) => {\n  const classes = useStyles();\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleDrawer = (open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent,\n  ) => {\n    if (\n      event.type === 'keydown' &&\n      ((event as React.KeyboardEvent).key === 'Tab' ||\n        (event as React.KeyboardEvent).key === 'Shift')\n    ) {\n      return;\n    }\n\n    setIsOpen(open);\n  };\n\n  const activeRoute = (routeName: any) => {\n    return props.location.pathname === routeName ? true : false;\n  }\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(true)}>\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Scarab\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </div>\n      <Drawer classes={{ paper: classes.drawer }} open={isOpen} onClose={toggleDrawer(false)}>\n        <div\n          className={classes.fullList}\n          role=\"presentation\"\n          onClick={toggleDrawer(false)}\n          onKeyDown={toggleDrawer(false)}\n        >\n          <MenuList>\n            {Routes.map((prop, key) => {\n              return (\n                <NavLink to={prop.path} style={{ textDecoration: 'none' }} key={key}>\n                  <MenuItem selected={activeRoute(prop.path)}>\n                    <ListItemText primary={prop.sidebarName} />\n                  </MenuItem>\n                </NavLink>\n              );\n            })}\n          </MenuList>\n        </div>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default withRouter(NavigationBar);\n","import React , { MouseEvent, KeyboardEvent, useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Routes from './Routes';\nimport NavigationBar from './NavigationBar';\n\n\nconst App: React.FC = () => {\n    return (\n          <div>\n            <NavigationBar />\n            <Switch>\n              {Routes.map((route: any) => (\n                          <Route exact path={route.path} key={route.path}>\n                            <route.component />\n                          </Route>\n                        ))}\n            </Switch>\n          </div>\n        );\n}\n\nexport default App;\n","import red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n  </ThemeProvider>,\n\n  document.getElementById('root')\n);\n","// source: scarab-ui.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar scarab$common_pb = require('./scarab-common_pb.js');\ngoog.object.extend(proto, scarab$common_pb);\ngoog.exportSymbol('proto.scarab.ListProfilesRequest', null, global);\ngoog.exportSymbol('proto.scarab.ListProfilesResponse', null, global);\ngoog.exportSymbol('proto.scarab.StopJobRequest', null, global);\ngoog.exportSymbol('proto.scarab.StopJobResponse', null, global);\ngoog.exportSymbol('proto.scarab.WatchActiveJobsRequest', null, global);\ngoog.exportSymbol('proto.scarab.WatchActiveJobsResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.ListProfilesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.scarab.ListProfilesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.ListProfilesRequest.displayName = 'proto.scarab.ListProfilesRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.ListProfilesResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.scarab.ListProfilesResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.scarab.ListProfilesResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.ListProfilesResponse.displayName = 'proto.scarab.ListProfilesResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.WatchActiveJobsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.scarab.WatchActiveJobsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.WatchActiveJobsRequest.displayName = 'proto.scarab.WatchActiveJobsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.WatchActiveJobsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.scarab.WatchActiveJobsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.WatchActiveJobsResponse.displayName = 'proto.scarab.WatchActiveJobsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.StopJobRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.scarab.StopJobRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.StopJobRequest.displayName = 'proto.scarab.StopJobRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.StopJobResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.scarab.StopJobResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.StopJobResponse.displayName = 'proto.scarab.StopJobResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.ListProfilesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.ListProfilesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.ListProfilesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.ListProfilesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.ListProfilesRequest}\n */\nproto.scarab.ListProfilesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.ListProfilesRequest;\n  return proto.scarab.ListProfilesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.ListProfilesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.ListProfilesRequest}\n */\nproto.scarab.ListProfilesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.ListProfilesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.ListProfilesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.ListProfilesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.ListProfilesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.scarab.ListProfilesResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.ListProfilesResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.ListProfilesResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.ListProfilesResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.ListProfilesResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    registeredList: jspb.Message.toObjectList(msg.getRegisteredList(),\n    scarab$common_pb.RegiteredProfile.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.ListProfilesResponse}\n */\nproto.scarab.ListProfilesResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.ListProfilesResponse;\n  return proto.scarab.ListProfilesResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.ListProfilesResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.ListProfilesResponse}\n */\nproto.scarab.ListProfilesResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new scarab$common_pb.RegiteredProfile;\n      reader.readMessage(value,scarab$common_pb.RegiteredProfile.deserializeBinaryFromReader);\n      msg.addRegistered(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.ListProfilesResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.ListProfilesResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.ListProfilesResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.ListProfilesResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRegisteredList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      scarab$common_pb.RegiteredProfile.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated RegiteredProfile registered = 1;\n * @return {!Array<!proto.scarab.RegiteredProfile>}\n */\nproto.scarab.ListProfilesResponse.prototype.getRegisteredList = function() {\n  return /** @type{!Array<!proto.scarab.RegiteredProfile>} */ (\n    jspb.Message.getRepeatedWrapperField(this, scarab$common_pb.RegiteredProfile, 1));\n};\n\n\n/**\n * @param {!Array<!proto.scarab.RegiteredProfile>} value\n * @return {!proto.scarab.ListProfilesResponse} returns this\n*/\nproto.scarab.ListProfilesResponse.prototype.setRegisteredList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.scarab.RegiteredProfile=} opt_value\n * @param {number=} opt_index\n * @return {!proto.scarab.RegiteredProfile}\n */\nproto.scarab.ListProfilesResponse.prototype.addRegistered = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.scarab.RegiteredProfile, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.scarab.ListProfilesResponse} returns this\n */\nproto.scarab.ListProfilesResponse.prototype.clearRegisteredList = function() {\n  return this.setRegisteredList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.WatchActiveJobsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.WatchActiveJobsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.WatchActiveJobsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.WatchActiveJobsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.WatchActiveJobsRequest}\n */\nproto.scarab.WatchActiveJobsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.WatchActiveJobsRequest;\n  return proto.scarab.WatchActiveJobsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.WatchActiveJobsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.WatchActiveJobsRequest}\n */\nproto.scarab.WatchActiveJobsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.WatchActiveJobsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.WatchActiveJobsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.WatchActiveJobsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.WatchActiveJobsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.WatchActiveJobsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.WatchActiveJobsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.WatchActiveJobsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.WatchActiveJobsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.WatchActiveJobsResponse}\n */\nproto.scarab.WatchActiveJobsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.WatchActiveJobsResponse;\n  return proto.scarab.WatchActiveJobsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.WatchActiveJobsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.WatchActiveJobsResponse}\n */\nproto.scarab.WatchActiveJobsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.WatchActiveJobsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.WatchActiveJobsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.WatchActiveJobsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.WatchActiveJobsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.StopJobRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.StopJobRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.StopJobRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.StopJobRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.StopJobRequest}\n */\nproto.scarab.StopJobRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.StopJobRequest;\n  return proto.scarab.StopJobRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.StopJobRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.StopJobRequest}\n */\nproto.scarab.StopJobRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.StopJobRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.StopJobRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.StopJobRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.StopJobRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.scarab.StopJobRequest.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.StopJobRequest} returns this\n */\nproto.scarab.StopJobRequest.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.StopJobResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.StopJobResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.StopJobResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.StopJobResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.StopJobResponse}\n */\nproto.scarab.StopJobResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.StopJobResponse;\n  return proto.scarab.StopJobResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.StopJobResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.StopJobResponse}\n */\nproto.scarab.StopJobResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.StopJobResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.StopJobResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.StopJobResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.StopJobResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\ngoog.object.extend(exports, proto.scarab);\n","// source: scarab-common.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');\ngoog.object.extend(proto, google_protobuf_timestamp_pb);\ngoog.exportSymbol('proto.scarab.JobArg', null, global);\ngoog.exportSymbol('proto.scarab.JobArgOption', null, global);\ngoog.exportSymbol('proto.scarab.JobArgValue', null, global);\ngoog.exportSymbol('proto.scarab.JobArgValue.ValueCase', null, global);\ngoog.exportSymbol('proto.scarab.ProfileArg', null, global);\ngoog.exportSymbol('proto.scarab.ProfileSpec', null, global);\ngoog.exportSymbol('proto.scarab.RegiteredProfile', null, global);\ngoog.exportSymbol('proto.scarab.StartJobRequest', null, global);\ngoog.exportSymbol('proto.scarab.StartJobResponse', null, global);\ngoog.exportSymbol('proto.scarab.WorkerDetails', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.WorkerDetails = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.scarab.WorkerDetails, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.WorkerDetails.displayName = 'proto.scarab.WorkerDetails';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.RegiteredProfile = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.scarab.RegiteredProfile.repeatedFields_, null);\n};\ngoog.inherits(proto.scarab.RegiteredProfile, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.RegiteredProfile.displayName = 'proto.scarab.RegiteredProfile';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.ProfileArg = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.scarab.ProfileArg, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.ProfileArg.displayName = 'proto.scarab.ProfileArg';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.ProfileSpec = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.scarab.ProfileSpec.repeatedFields_, null);\n};\ngoog.inherits(proto.scarab.ProfileSpec, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.ProfileSpec.displayName = 'proto.scarab.ProfileSpec';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.JobArgOption = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.scarab.JobArgOption.repeatedFields_, null);\n};\ngoog.inherits(proto.scarab.JobArgOption, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.JobArgOption.displayName = 'proto.scarab.JobArgOption';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.JobArgValue = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.scarab.JobArgValue.oneofGroups_);\n};\ngoog.inherits(proto.scarab.JobArgValue, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.JobArgValue.displayName = 'proto.scarab.JobArgValue';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.JobArg = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.scarab.JobArg, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.JobArg.displayName = 'proto.scarab.JobArg';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.StartJobRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.scarab.StartJobRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.scarab.StartJobRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.StartJobRequest.displayName = 'proto.scarab.StartJobRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.scarab.StartJobResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.scarab.StartJobResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.scarab.StartJobResponse.displayName = 'proto.scarab.StartJobResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.WorkerDetails.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.WorkerDetails.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.WorkerDetails} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.WorkerDetails.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addr: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    name: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.WorkerDetails}\n */\nproto.scarab.WorkerDetails.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.WorkerDetails;\n  return proto.scarab.WorkerDetails.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.WorkerDetails} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.WorkerDetails}\n */\nproto.scarab.WorkerDetails.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddr(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.WorkerDetails.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.WorkerDetails.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.WorkerDetails} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.WorkerDetails.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string addr = 1;\n * @return {string}\n */\nproto.scarab.WorkerDetails.prototype.getAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.WorkerDetails} returns this\n */\nproto.scarab.WorkerDetails.prototype.setAddr = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.scarab.WorkerDetails.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.WorkerDetails} returns this\n */\nproto.scarab.WorkerDetails.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.scarab.RegiteredProfile.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.RegiteredProfile.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.RegiteredProfile.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.RegiteredProfile} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.RegiteredProfile.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    spec: (f = msg.getSpec()) && proto.scarab.ProfileSpec.toObject(includeInstance, f),\n    firstregistration: (f = msg.getFirstregistration()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n    workersList: jspb.Message.toObjectList(msg.getWorkersList(),\n    proto.scarab.WorkerDetails.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.RegiteredProfile}\n */\nproto.scarab.RegiteredProfile.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.RegiteredProfile;\n  return proto.scarab.RegiteredProfile.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.RegiteredProfile} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.RegiteredProfile}\n */\nproto.scarab.RegiteredProfile.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.scarab.ProfileSpec;\n      reader.readMessage(value,proto.scarab.ProfileSpec.deserializeBinaryFromReader);\n      msg.setSpec(value);\n      break;\n    case 2:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setFirstregistration(value);\n      break;\n    case 3:\n      var value = new proto.scarab.WorkerDetails;\n      reader.readMessage(value,proto.scarab.WorkerDetails.deserializeBinaryFromReader);\n      msg.addWorkers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.RegiteredProfile.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.RegiteredProfile.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.RegiteredProfile} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.RegiteredProfile.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSpec();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.scarab.ProfileSpec.serializeBinaryToWriter\n    );\n  }\n  f = message.getFirstregistration();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n  f = message.getWorkersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.scarab.WorkerDetails.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ProfileSpec spec = 1;\n * @return {?proto.scarab.ProfileSpec}\n */\nproto.scarab.RegiteredProfile.prototype.getSpec = function() {\n  return /** @type{?proto.scarab.ProfileSpec} */ (\n    jspb.Message.getWrapperField(this, proto.scarab.ProfileSpec, 1));\n};\n\n\n/**\n * @param {?proto.scarab.ProfileSpec|undefined} value\n * @return {!proto.scarab.RegiteredProfile} returns this\n*/\nproto.scarab.RegiteredProfile.prototype.setSpec = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.scarab.RegiteredProfile} returns this\n */\nproto.scarab.RegiteredProfile.prototype.clearSpec = function() {\n  return this.setSpec(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.scarab.RegiteredProfile.prototype.hasSpec = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional google.protobuf.Timestamp firstRegistration = 2;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.scarab.RegiteredProfile.prototype.getFirstregistration = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));\n};\n\n\n/**\n * @param {?proto.google.protobuf.Timestamp|undefined} value\n * @return {!proto.scarab.RegiteredProfile} returns this\n*/\nproto.scarab.RegiteredProfile.prototype.setFirstregistration = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.scarab.RegiteredProfile} returns this\n */\nproto.scarab.RegiteredProfile.prototype.clearFirstregistration = function() {\n  return this.setFirstregistration(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.scarab.RegiteredProfile.prototype.hasFirstregistration = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * repeated WorkerDetails workers = 3;\n * @return {!Array<!proto.scarab.WorkerDetails>}\n */\nproto.scarab.RegiteredProfile.prototype.getWorkersList = function() {\n  return /** @type{!Array<!proto.scarab.WorkerDetails>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.scarab.WorkerDetails, 3));\n};\n\n\n/**\n * @param {!Array<!proto.scarab.WorkerDetails>} value\n * @return {!proto.scarab.RegiteredProfile} returns this\n*/\nproto.scarab.RegiteredProfile.prototype.setWorkersList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.scarab.WorkerDetails=} opt_value\n * @param {number=} opt_index\n * @return {!proto.scarab.WorkerDetails}\n */\nproto.scarab.RegiteredProfile.prototype.addWorkers = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.scarab.WorkerDetails, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.scarab.RegiteredProfile} returns this\n */\nproto.scarab.RegiteredProfile.prototype.clearWorkersList = function() {\n  return this.setWorkersList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.ProfileArg.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.ProfileArg.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.ProfileArg} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.ProfileArg.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    description: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    pb_default: (f = msg.getDefault()) && proto.scarab.JobArgValue.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.ProfileArg}\n */\nproto.scarab.ProfileArg.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.ProfileArg;\n  return proto.scarab.ProfileArg.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.ProfileArg} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.ProfileArg}\n */\nproto.scarab.ProfileArg.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 3:\n      var value = new proto.scarab.JobArgValue;\n      reader.readMessage(value,proto.scarab.JobArgValue.deserializeBinaryFromReader);\n      msg.setDefault(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.ProfileArg.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.ProfileArg.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.ProfileArg} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.ProfileArg.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getDefault();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.scarab.JobArgValue.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.scarab.ProfileArg.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.ProfileArg} returns this\n */\nproto.scarab.ProfileArg.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string description = 2;\n * @return {string}\n */\nproto.scarab.ProfileArg.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.ProfileArg} returns this\n */\nproto.scarab.ProfileArg.prototype.setDescription = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional JobArgValue default = 3;\n * @return {?proto.scarab.JobArgValue}\n */\nproto.scarab.ProfileArg.prototype.getDefault = function() {\n  return /** @type{?proto.scarab.JobArgValue} */ (\n    jspb.Message.getWrapperField(this, proto.scarab.JobArgValue, 3));\n};\n\n\n/**\n * @param {?proto.scarab.JobArgValue|undefined} value\n * @return {!proto.scarab.ProfileArg} returns this\n*/\nproto.scarab.ProfileArg.prototype.setDefault = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.scarab.ProfileArg} returns this\n */\nproto.scarab.ProfileArg.prototype.clearDefault = function() {\n  return this.setDefault(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.scarab.ProfileArg.prototype.hasDefault = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.scarab.ProfileSpec.repeatedFields_ = [4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.ProfileSpec.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.ProfileSpec.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.ProfileSpec} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.ProfileSpec.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profile: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    version: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    description: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    argsList: jspb.Message.toObjectList(msg.getArgsList(),\n    proto.scarab.ProfileArg.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.ProfileSpec}\n */\nproto.scarab.ProfileSpec.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.ProfileSpec;\n  return proto.scarab.ProfileSpec.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.ProfileSpec} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.ProfileSpec}\n */\nproto.scarab.ProfileSpec.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfile(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVersion(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 4:\n      var value = new proto.scarab.ProfileArg;\n      reader.readMessage(value,proto.scarab.ProfileArg.deserializeBinaryFromReader);\n      msg.addArgs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.ProfileSpec.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.ProfileSpec.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.ProfileSpec} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.ProfileSpec.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfile();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getVersion();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getArgsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.scarab.ProfileArg.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string profile = 1;\n * @return {string}\n */\nproto.scarab.ProfileSpec.prototype.getProfile = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.ProfileSpec} returns this\n */\nproto.scarab.ProfileSpec.prototype.setProfile = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string version = 2;\n * @return {string}\n */\nproto.scarab.ProfileSpec.prototype.getVersion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.ProfileSpec} returns this\n */\nproto.scarab.ProfileSpec.prototype.setVersion = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string description = 3;\n * @return {string}\n */\nproto.scarab.ProfileSpec.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.ProfileSpec} returns this\n */\nproto.scarab.ProfileSpec.prototype.setDescription = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * repeated ProfileArg args = 4;\n * @return {!Array<!proto.scarab.ProfileArg>}\n */\nproto.scarab.ProfileSpec.prototype.getArgsList = function() {\n  return /** @type{!Array<!proto.scarab.ProfileArg>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.scarab.ProfileArg, 4));\n};\n\n\n/**\n * @param {!Array<!proto.scarab.ProfileArg>} value\n * @return {!proto.scarab.ProfileSpec} returns this\n*/\nproto.scarab.ProfileSpec.prototype.setArgsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.scarab.ProfileArg=} opt_value\n * @param {number=} opt_index\n * @return {!proto.scarab.ProfileArg}\n */\nproto.scarab.ProfileSpec.prototype.addArgs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.scarab.ProfileArg, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.scarab.ProfileSpec} returns this\n */\nproto.scarab.ProfileSpec.prototype.clearArgsList = function() {\n  return this.setArgsList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.scarab.JobArgOption.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.JobArgOption.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.JobArgOption.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.JobArgOption} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.JobArgOption.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    optionList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n    multiple: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.JobArgOption}\n */\nproto.scarab.JobArgOption.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.JobArgOption;\n  return proto.scarab.JobArgOption.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.JobArgOption} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.JobArgOption}\n */\nproto.scarab.JobArgOption.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addOption(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setMultiple(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.JobArgOption.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.JobArgOption.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.JobArgOption} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.JobArgOption.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOptionList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      1,\n      f\n    );\n  }\n  f = message.getMultiple();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated string option = 1;\n * @return {!Array<string>}\n */\nproto.scarab.JobArgOption.prototype.getOptionList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.scarab.JobArgOption} returns this\n */\nproto.scarab.JobArgOption.prototype.setOptionList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.scarab.JobArgOption} returns this\n */\nproto.scarab.JobArgOption.prototype.addOption = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.scarab.JobArgOption} returns this\n */\nproto.scarab.JobArgOption.prototype.clearOptionList = function() {\n  return this.setOptionList([]);\n};\n\n\n/**\n * optional bool multiple = 2;\n * @return {boolean}\n */\nproto.scarab.JobArgOption.prototype.getMultiple = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.scarab.JobArgOption} returns this\n */\nproto.scarab.JobArgOption.prototype.setMultiple = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.scarab.JobArgValue.oneofGroups_ = [[1,2,3,4]];\n\n/**\n * @enum {number}\n */\nproto.scarab.JobArgValue.ValueCase = {\n  VALUE_NOT_SET: 0,\n  STRING: 1,\n  FLOAT: 2,\n  BOOL: 3,\n  OPTION: 4\n};\n\n/**\n * @return {proto.scarab.JobArgValue.ValueCase}\n */\nproto.scarab.JobArgValue.prototype.getValueCase = function() {\n  return /** @type {proto.scarab.JobArgValue.ValueCase} */(jspb.Message.computeOneofCase(this, proto.scarab.JobArgValue.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.JobArgValue.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.JobArgValue.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.JobArgValue} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.JobArgValue.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    string: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    pb_float: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),\n    bool: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),\n    option: (f = msg.getOption()) && proto.scarab.JobArgOption.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.JobArgValue}\n */\nproto.scarab.JobArgValue.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.JobArgValue;\n  return proto.scarab.JobArgValue.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.JobArgValue} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.JobArgValue}\n */\nproto.scarab.JobArgValue.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setString(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setFloat(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setBool(value);\n      break;\n    case 4:\n      var value = new proto.scarab.JobArgOption;\n      reader.readMessage(value,proto.scarab.JobArgOption.deserializeBinaryFromReader);\n      msg.setOption(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.JobArgValue.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.JobArgValue.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.JobArgValue} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.JobArgValue.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeFloat(\n      2,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getOption();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.scarab.JobArgOption.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string string = 1;\n * @return {string}\n */\nproto.scarab.JobArgValue.prototype.getString = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.JobArgValue} returns this\n */\nproto.scarab.JobArgValue.prototype.setString = function(value) {\n  return jspb.Message.setOneofField(this, 1, proto.scarab.JobArgValue.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.scarab.JobArgValue} returns this\n */\nproto.scarab.JobArgValue.prototype.clearString = function() {\n  return jspb.Message.setOneofField(this, 1, proto.scarab.JobArgValue.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.scarab.JobArgValue.prototype.hasString = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional float float = 2;\n * @return {number}\n */\nproto.scarab.JobArgValue.prototype.getFloat = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.scarab.JobArgValue} returns this\n */\nproto.scarab.JobArgValue.prototype.setFloat = function(value) {\n  return jspb.Message.setOneofField(this, 2, proto.scarab.JobArgValue.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.scarab.JobArgValue} returns this\n */\nproto.scarab.JobArgValue.prototype.clearFloat = function() {\n  return jspb.Message.setOneofField(this, 2, proto.scarab.JobArgValue.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.scarab.JobArgValue.prototype.hasFloat = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bool bool = 3;\n * @return {boolean}\n */\nproto.scarab.JobArgValue.prototype.getBool = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.scarab.JobArgValue} returns this\n */\nproto.scarab.JobArgValue.prototype.setBool = function(value) {\n  return jspb.Message.setOneofField(this, 3, proto.scarab.JobArgValue.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.scarab.JobArgValue} returns this\n */\nproto.scarab.JobArgValue.prototype.clearBool = function() {\n  return jspb.Message.setOneofField(this, 3, proto.scarab.JobArgValue.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.scarab.JobArgValue.prototype.hasBool = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional JobArgOption option = 4;\n * @return {?proto.scarab.JobArgOption}\n */\nproto.scarab.JobArgValue.prototype.getOption = function() {\n  return /** @type{?proto.scarab.JobArgOption} */ (\n    jspb.Message.getWrapperField(this, proto.scarab.JobArgOption, 4));\n};\n\n\n/**\n * @param {?proto.scarab.JobArgOption|undefined} value\n * @return {!proto.scarab.JobArgValue} returns this\n*/\nproto.scarab.JobArgValue.prototype.setOption = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 4, proto.scarab.JobArgValue.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.scarab.JobArgValue} returns this\n */\nproto.scarab.JobArgValue.prototype.clearOption = function() {\n  return this.setOption(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.scarab.JobArgValue.prototype.hasOption = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.JobArg.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.JobArg.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.JobArg} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.JobArg.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    value: (f = msg.getValue()) && proto.scarab.JobArgValue.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.JobArg}\n */\nproto.scarab.JobArg.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.JobArg;\n  return proto.scarab.JobArg.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.JobArg} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.JobArg}\n */\nproto.scarab.JobArg.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = new proto.scarab.JobArgValue;\n      reader.readMessage(value,proto.scarab.JobArgValue.deserializeBinaryFromReader);\n      msg.setValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.JobArg.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.JobArg.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.JobArg} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.JobArg.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getValue();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.scarab.JobArgValue.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.scarab.JobArg.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.JobArg} returns this\n */\nproto.scarab.JobArg.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional JobArgValue value = 2;\n * @return {?proto.scarab.JobArgValue}\n */\nproto.scarab.JobArg.prototype.getValue = function() {\n  return /** @type{?proto.scarab.JobArgValue} */ (\n    jspb.Message.getWrapperField(this, proto.scarab.JobArgValue, 2));\n};\n\n\n/**\n * @param {?proto.scarab.JobArgValue|undefined} value\n * @return {!proto.scarab.JobArg} returns this\n*/\nproto.scarab.JobArg.prototype.setValue = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.scarab.JobArg} returns this\n */\nproto.scarab.JobArg.prototype.clearValue = function() {\n  return this.setValue(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.scarab.JobArg.prototype.hasValue = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.scarab.StartJobRequest.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.StartJobRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.StartJobRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.StartJobRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.StartJobRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profile: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    version: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    argsList: jspb.Message.toObjectList(msg.getArgsList(),\n    proto.scarab.JobArg.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.StartJobRequest}\n */\nproto.scarab.StartJobRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.StartJobRequest;\n  return proto.scarab.StartJobRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.StartJobRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.StartJobRequest}\n */\nproto.scarab.StartJobRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfile(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVersion(value);\n      break;\n    case 3:\n      var value = new proto.scarab.JobArg;\n      reader.readMessage(value,proto.scarab.JobArg.deserializeBinaryFromReader);\n      msg.addArgs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.StartJobRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.StartJobRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.StartJobRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.StartJobRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfile();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getVersion();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getArgsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.scarab.JobArg.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string profile = 1;\n * @return {string}\n */\nproto.scarab.StartJobRequest.prototype.getProfile = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.StartJobRequest} returns this\n */\nproto.scarab.StartJobRequest.prototype.setProfile = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string version = 2;\n * @return {string}\n */\nproto.scarab.StartJobRequest.prototype.getVersion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.StartJobRequest} returns this\n */\nproto.scarab.StartJobRequest.prototype.setVersion = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * repeated JobArg args = 3;\n * @return {!Array<!proto.scarab.JobArg>}\n */\nproto.scarab.StartJobRequest.prototype.getArgsList = function() {\n  return /** @type{!Array<!proto.scarab.JobArg>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.scarab.JobArg, 3));\n};\n\n\n/**\n * @param {!Array<!proto.scarab.JobArg>} value\n * @return {!proto.scarab.StartJobRequest} returns this\n*/\nproto.scarab.StartJobRequest.prototype.setArgsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.scarab.JobArg=} opt_value\n * @param {number=} opt_index\n * @return {!proto.scarab.JobArg}\n */\nproto.scarab.StartJobRequest.prototype.addArgs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.scarab.JobArg, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.scarab.StartJobRequest} returns this\n */\nproto.scarab.StartJobRequest.prototype.clearArgsList = function() {\n  return this.setArgsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.scarab.StartJobResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.scarab.StartJobResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.scarab.StartJobResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.StartJobResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.scarab.StartJobResponse}\n */\nproto.scarab.StartJobResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.scarab.StartJobResponse;\n  return proto.scarab.StartJobResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.scarab.StartJobResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.scarab.StartJobResponse}\n */\nproto.scarab.StartJobResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.scarab.StartJobResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.scarab.StartJobResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.scarab.StartJobResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.scarab.StartJobResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.scarab.StartJobResponse.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.scarab.StartJobResponse} returns this\n */\nproto.scarab.StartJobResponse.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\ngoog.object.extend(exports, proto.scarab);\n","// package: scarab\n// file: scarab-ui.proto\n\nvar scarab_ui_pb = require(\"./scarab-ui_pb\");\nvar scarab_common_pb = require(\"./scarab-common_pb\");\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar ManagerUI = (function () {\n  function ManagerUI() {}\n  ManagerUI.serviceName = \"scarab.ManagerUI\";\n  return ManagerUI;\n}());\n\nManagerUI.StartJob = {\n  methodName: \"StartJob\",\n  service: ManagerUI,\n  requestStream: false,\n  responseStream: false,\n  requestType: scarab_common_pb.StartJobRequest,\n  responseType: scarab_common_pb.StartJobResponse\n};\n\nManagerUI.StopJob = {\n  methodName: \"StopJob\",\n  service: ManagerUI,\n  requestStream: false,\n  responseStream: false,\n  requestType: scarab_ui_pb.StopJobRequest,\n  responseType: scarab_ui_pb.StopJobResponse\n};\n\nManagerUI.ListProfiles = {\n  methodName: \"ListProfiles\",\n  service: ManagerUI,\n  requestStream: false,\n  responseStream: false,\n  requestType: scarab_ui_pb.ListProfilesRequest,\n  responseType: scarab_ui_pb.ListProfilesResponse\n};\n\nManagerUI.WatchActiveJobs = {\n  methodName: \"WatchActiveJobs\",\n  service: ManagerUI,\n  requestStream: false,\n  responseStream: true,\n  requestType: scarab_ui_pb.WatchActiveJobsRequest,\n  responseType: scarab_ui_pb.WatchActiveJobsResponse\n};\n\nexports.ManagerUI = ManagerUI;\n\nfunction ManagerUIClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nManagerUIClient.prototype.startJob = function startJob(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(ManagerUI.StartJob, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nManagerUIClient.prototype.stopJob = function stopJob(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(ManagerUI.StopJob, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nManagerUIClient.prototype.listProfiles = function listProfiles(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(ManagerUI.ListProfiles, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nManagerUIClient.prototype.watchActiveJobs = function watchActiveJobs(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(ManagerUI.WatchActiveJobs, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nexports.ManagerUIClient = ManagerUIClient;\n\n"],"sourceRoot":""}